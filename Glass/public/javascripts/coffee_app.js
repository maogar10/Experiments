// Generated by CoffeeScript 1.4.0
var app, clients, express, http, io;

express = require('express');

http = require('http');

app = express();

app.configure(function() {
  var server;
  app.set('port', process.env.PORT || 8000);
  app.set('views', __dirname + '/views');
  app.set('view engine', 'jade');
  app.use(express.favicon);
  app.use(express.bodyParser);
  app.use(express.methodOverride);
  app.use(app.router);
  app.use(express["static"](__dirname + '/public'));
  app.get('/', function(req, res) {
    return res.render('flyover', {
      title: 'Express'
    });
  });
  app.get('/glass/:parent_id/:glass_id', function(req, res) {
    return res.render('glass', {
      title: 'Express',
      glass_id: req.params.glass_id,
      parent_id: req.query['parent']
    });
  });
  app.get('/flyover', function(req, res) {
    return res.render('flyover', {
      title: 'Express'
    });
  });
  return server = http.createServer(app).listen(app.get('port'), function() {
    return console.log("Express server listening on port " + app.get('port'));
  });
});

io = require('socket.io'.listen(server));

io.set('log level', 1);

clients = {};

io.sockets.on('connection', function(socket) {
  clients[socket.id] = socket;
  socket.emit('gameId', socket.id);
  socket.on('fire', function(d) {
    return socket.broadcast.emit('fire', d);
  });
  return socket.on('init', function(d) {
    var parent_id;
    parent_id = d.parent_id;
    socket.broadcast.emit('glass', {
      parent: d.parent_id,
      glass: d.glass_id
    });
    return socket.on('xy', function(d) {
      return clients[parent_id.toString].emit('xy_toParent', d);
    });
  });
});
